// Header File
#ifndef __FONT_H__
#define __FONT_H__

// Dependency
#include <stdint.h>

/**
 * @brief Retrieves the index for the input character
 * @param[in] fontArray Pointer to font array
 * @param[in] c The input character
 */
__attribute__ ((always_inline)) inline static uint8_t font_get_index(uint8_t* fontArray, char c) {
	// Final Value
	uint8_t index = 0xFF;
	// Uppercase letters
	if (c >= 'A' && c <= 'Z') {
		index = c - 'A';
	}
	// Lowercase letters 
	else if (c >= 'a' && c <= 'z') {
		index = (c - 'a') + 26;
	} 
	// Digits
	else if (c >= '0' && c <= '9') {
		index = (c - '0') + 52;
	} 
	// Space
	else if (c == 32) {
		index = 62;
	}
	else if(c == '.'){
		index = 63;
	}
	else if(c == '@'){
		index = 64;
	}
	// Default to space for unsupported characters
	else {
		index = 62;
	}
	// Return the index
	return index;
}

// 8x8 Working Font
static const uint8_t font8x8[][8] 
= {
	// A
	{0x00, 0xFC, 0x26, 0x27, 0x27, 0x26, 0xFC, 0x00},
	// B
	{0x00, 0xFF, 0x49, 0x49, 0x49, 0x49, 0x36, 0x00},
	// C
	{0x00, 0x3E, 0x41, 0x41, 0x41, 0x41, 0x22, 0x00},
	// D
	{0x00, 0xFF, 0x41, 0x41, 0x41, 0x41, 0x3E, 0x00},
	// E
	{0x00, 0xFF, 0x49, 0x49, 0x49, 0x49, 0x41, 0x00},
	// F
	{0x00, 0xFF, 0x09, 0x09, 0x09, 0x09, 0x01, 0x00},
	// G
	{0x00, 0x3E, 0x41, 0x41, 0x51, 0x51, 0x32, 0x00},
	// H
	{0x00, 0xFF, 0x08, 0x08, 0x08, 0x08, 0xFF, 0x00},
	// I
	{0x00, 0x41, 0x41, 0xFF, 0x41, 0x41, 0x00, 0x00},
	// J
	{0x00, 0x42, 0x41, 0xFF, 0x40, 0x40, 0x00, 0x00},
	// K
	{0x00, 0xFF, 0x08, 0x14, 0x22, 0x41, 0x00, 0x00},
	// L
	{0x00, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00},
	// M
	{0x00, 0xFF, 0x02, 0x04, 0x08, 0x04, 0x02, 0xFF},
	// N
	{0x00, 0xFF, 0x02, 0x04, 0x08, 0x10, 0xFF, 0x00},
	// O
	{0x00, 0x3E, 0x41, 0x41, 0x41, 0x41, 0x3E, 0x00},
	// P
	{0x00, 0xFF, 0x11, 0x11, 0x11, 0x11, 0x0E, 0x00},
	// Q
	{0x00, 0x3E, 0x41, 0x41, 0x61, 0x51, 0x3E, 0x00},
	// R
	{0x00, 0xFF, 0x11, 0x31, 0x51, 0x51, 0x8E, 0x00},
	// S
	{0x00, 0x46, 0x49, 0x49, 0x49, 0x49, 0x31, 0x00},
	// T
	{0x00, 0x01, 0x01, 0xFF, 0x01, 0x01, 0x00, 0x00},
	// U
	{0x00, 0xFF, 0x40, 0x40, 0x40, 0x40, 0xFF, 0x00},
	// V
	{0x00, 0x3F, 0x40, 0x40, 0x40, 0x40, 0x3F, 0x00},
	// W
	{0x00, 0xFF, 0x20, 0x10, 0x08, 0x10, 0x20, 0xFF},
	// X
	{0x00, 0x63, 0x14, 0x08, 0x08, 0x14, 0x63, 0x00},
	// Y
	{0x00, 0x07, 0x08, 0x70, 0x08, 0x07, 0x00, 0x00},
	// Z
	{0x00, 0x61, 0x51, 0x49, 0x45, 0x43, 0x00, 0x00},
	// a
	{0x00, 0x20, 0x54, 0x54, 0x54, 0x54, 0x78, 0x00},
	// b
	{0x00, 0x7F, 0x48, 0x48, 0x48, 0x48, 0x30, 0x00},
	// c
	{0x00, 0x38, 0x44, 0x40, 0x40, 0x44, 0x38, 0x00},
	// d
	{0x00, 0x30, 0x48, 0x48, 0x48, 0x48, 0x7F, 0x00},
	// e
	{0x00, 0x38, 0x54, 0x54, 0x54, 0x50, 0x08, 0x00},
	// f
	{0x00, 0x08, 0x7E, 0x09, 0x01, 0x02, 0x00, 0x00},
	// g
	{0x00, 0x08, 0x14, 0x54, 0x54, 0x54, 0x3C, 0x00},
	// h
	{0x00, 0x7F, 0x08, 0x08, 0x08, 0x08, 0x70, 0x00},
	// i
	{0x00, 0x00, 0x48, 0x7D, 0x40, 0x00, 0x00, 0x00},
	// j
	{0x00, 0x20, 0x40, 0x48, 0x3D, 0x00, 0x00, 0x00},
	// k
	{0x00, 0x7F, 0x10, 0x18, 0x24, 0x44, 0x00, 0x00},
	// l
	{0x00, 0x01, 0x01, 0x7F, 0x40, 0x00, 0x00, 0x00},
	// m
	{0x00, 0x7C, 0x04, 0x18, 0x04, 0x78, 0x00, 0x00},
	// n
	{0x00, 0x7C, 0x08, 0x04, 0x04, 0x78, 0x00, 0x00},
	// o
	{0x00, 0x38, 0x44, 0x44, 0x44, 0x44, 0x38, 0x00},
	// p
	{0x00, 0x7C, 0x14, 0x14, 0x14, 0x14, 0x08, 0x00},
	// q
	{0x00, 0x08, 0x14, 0x14, 0x14, 0x7C, 0x40, 0x00},
	// r
	{0x00, 0x7C, 0x08, 0x04, 0x04, 0x08, 0x00, 0x00},
	// s
	{0x00, 0x48, 0x54, 0x54, 0x54, 0x24, 0x00, 0x00},
	// t
	{0x00, 0x04, 0x3F, 0x44, 0x40, 0x20, 0x00, 0x00},
	// u
	{0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C, 0x00, 0x00},
	// v
	{0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00, 0x00},
	// w
	{0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00, 0x00},
	// x
	{0x00, 0x44, 0x28, 0x10, 0x28, 0x44, 0x00, 0x00},
	// y
	{0x00, 0x0C, 0x50, 0x50, 0x50, 0x3C, 0x00, 0x00},
	// z
	{0x00, 0x44, 0x64, 0x54, 0x4C, 0x44, 0x00, 0x00},
	// 0
	{0x00, 0x7E, 0xFF, 0xC3, 0xC3, 0xFF, 0x7E, 0x00},
	// 1
	{0x00, 0xC4, 0xC6, 0xFF, 0xFF, 0xC0, 0xC0, 0x00},
	// 2
	{0x00, 0xC6, 0xE7, 0xF3, 0xDB, 0xDF, 0xCE, 0x00},
	// 3
	{0x00, 0x66, 0xE3, 0xC3, 0xDB, 0xFF, 0x66, 0x00},
	// 4
	{0x00, 0x18, 0x1C, 0x16, 0xFF, 0xFF, 0x10, 0x00},
	// 5
	{0x00, 0x6F, 0xEF, 0xC9, 0xC9, 0xF9, 0x71, 0x00},
	// 6
	{0x00, 0x7E, 0xFF, 0xD9, 0xD9, 0xFB, 0x72, 0x00},
	// 7
	{0x00, 0x03, 0x03, 0xF3, 0xFB, 0x0F, 0x07, 0x00},
	// 8
	{0x00, 0x76, 0xFF, 0xDB, 0xDB, 0xFF, 0x76, 0x00},
	// 9
	{0x00, 0x4E, 0xDF, 0xD3, 0xD3, 0xFF, 0x7E, 0x00},
	// Space ' '
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00},
	// '.'
	{0x00, 0x00, 0x00, 0xC0, 0xC0, 0x00, 0x00, 0x00},
	// '@'
	{0x00, 0xFE, 0x82, 0xBA, 0xBA, 0xBA, 0xBE, 0x00}
};




#endif /* __FONT_H__ */